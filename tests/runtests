#!/bin/sh

export LC_ALL=C

#set -e
cwd=$(pwd)
base=$(dirname $0)
srcroot="${cwd}/${base}/.."
fail=0

DCT_DATA_ROOT=${DCT_DATA_ROOT:-${srcroot}/data}
DCT_TEMPLATE_PATH=${DCT_TEMPLATE_PATH:-${srcroot}/../dcs-mission-oeo-templates}
if ! test -d "${DCT_TEMPLATE_PATH}"; then
	unset DCT_TEMPLATE_PATH
fi
LUA_LIB_PATH=${LUA_LIB_PATH:-${srcroot}/../lua-libs/src/?.lua}
LUA_PATH="${srcroot}/src/?.lua;${LUA_LIB_PATH}"
LUA_PATH="${LUA_PATH};;"
export LUA_PATH
export DCT_DATA_ROOT
export DCT_TEMPLATE_PATH
#echo "lua-path: ${LUA_PATH}"
#echo "DCT data root: ${DCT_DATA_ROOT}"
#echo "DCT template path: ${DCT_TEMPLATE_PATH}"

cd "${base}"
if test $# -gt 0; then
	tests="$@"
else
	tests=$(ls test-*.lua)
fi

for t in $tests; do
	result="PASS"
	./$(basename ${t})
	if test $? -ne 0; then
		result="FAIL"
		fail=1
	fi
	echo "${result}: ${t}"
done
cd "${cwd}"
exit ${fail}


# TODO instead of going the route of converting each test to a lua table
# and having a single runner instead have each test accept commands;
# Goals for tests
#  * able to be run individually
#      this can be done by passing the call of the test to a function
#        that prints a 1-liner if the test fails
#
# test improvements
# * convert this to a lua file
# * still allow each "test suite" to be in a file
